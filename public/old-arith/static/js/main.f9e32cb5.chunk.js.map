{"version":3,"sources":["components/Settings.jsx","components/Score.jsx","components/EndScreen.jsx","correct.mp3","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Settings","props","useState","minAdd","setMinAdd","maxAdd","setMaxAdd","maxDivide","setMaxDivide","maxMultiply","setMaxMultiply","add","setAdd","subtract","setSubtract","multiply","setMultiply","divide","setDivide","updateSettings","settings","setSettings","className","type","value","onChange","e","target","max","min","onClick","setInGame","Score","style","fontSize","opacity","score","EndScreen","resetGame","Game","seconds","useTimer","expiryTimestamp","to","Date","setSeconds","getSeconds","getTimeout","onExpire","document","title","setShowEndScreen","useEffect","setInputColor","useSound","correctSound","playCorrect","question","setQuestion","answer","setAnswer","setScore","showEndScreen","inputColor","generateQuestion","Math","floor","random","q1","q2","qm2","console","log","reset","App","inGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9e32cb5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\nexport const Settings = (props) => {\r\n\r\n    const [minAdd, setMinAdd] = useState(0);\r\n    const [maxAdd, setMaxAdd] = useState(120)\r\n\r\n    const [maxDivide, setMaxDivide] = useState(120)\r\n    const [maxMultiply, setMaxMultiply] = useState(120)\r\n\r\n    const [add, setAdd] = useState(true)\r\n    const [subtract, setSubtract] = useState(true)\r\n    const [multiply, setMultiply] = useState(true)\r\n    const [divide, setDivide] = useState(true)\r\n\r\n    function updateSettings() {\r\n        const settings = {\r\n            \"minAdd\" : minAdd,\r\n            \"maxAdd\" : maxAdd,\r\n            \"minDivide\": 0,\r\n            \"maxDivide\" : maxDivide,\r\n            \"maxSmallDivide\": 12,\r\n            \"minSmallDivide\": 0,\r\n            \"minMultiply\" : 0,\r\n            \"maxMultiply\" : maxMultiply,\r\n            \"add\" : add,\r\n            \"subtract\" : subtract,\r\n            \"multiply\" : multiply,\r\n            \"divide\" : divide,\r\n            \"seconds\": 60\r\n        }\r\n        props.setSettings(settings);\r\n    }\r\n\r\n    function minAddRangeChanged(e) {\r\n        setMinAdd(e.target.value);\r\n        updateSettings();\r\n    }\r\n\r\n    function maxAddRangeChanged(e) {\r\n        setMaxAdd(e.target.value);\r\n        updateSettings();\r\n    }\r\n\r\n    function maxDivideRangeChanged(e) {\r\n        setMaxDivide(e.target.value);\r\n        updateSettings();\r\n    }\r\n\r\n    function maxMultiplyRangeChanged(e) {\r\n        setMaxMultiply(e.target.value);\r\n        updateSettings();\r\n    }\r\n\r\n    function toggleAdd(e) {\r\n        if(subtract || multiply || divide)\r\n        setAdd(!add);\r\n        updateSettings();\r\n    }\r\n\r\n    function toggleSubtract(e) {\r\n        if(add || multiply || divide)\r\n        setSubtract(!subtract);\r\n        updateSettings();\r\n    }\r\n\r\n    function toggleMultiply(e) {\r\n        if(add || subtract || divide)\r\n        setMultiply(!multiply);\r\n        updateSettings();\r\n    }\r\n\r\n    function toggleDivide(e) {\r\n        if(add || subtract || multiply)\r\n        setDivide(!divide)\r\n        updateSettings();\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-9xl p-10 text-5xl font-body\">Arith</h1>\r\n            <div className=\"grid grid-cols-4 pl-72 pr-72 pt-20 gap-5\">\r\n                <div>\r\n                    <p className=\"text-2xl\">Minimum for ➕ and ➖</p>\r\n                    <input className=\"rounded-lg overflow-hidden appearance-none bg-gray-300 h-3 w-128\" type=\"range\" value={minAdd} onChange={minAddRangeChanged} max={maxAdd} min=\"0\"></input>\r\n                    <p className=\"mb-7\">{minAdd}</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <p className=\"text-2xl\">Maximum for ➕ and ➖</p>\r\n                    <input className=\"rounded-lg overflow-hidden appearance-none bg-gray-300 h-3 w-128\" type=\"range\" value={maxAdd} onChange={maxAddRangeChanged} max=\"200\" min={minAdd}></input>\r\n                    <p className=\"mb-7\">{maxAdd}</p>\r\n                </div>\r\n\r\n\r\n                <button className={\"transition duration-300 ease-in-out border-4 text-5xl \" + (add ? \"border-green-400\" : \"border-red-400\")} onClick={toggleAdd}> ➕ </button>\r\n                <button className={\"transition duration-300 ease-in-out border-4 text-5xl \" + (subtract ? \"border-green-400\" : \"border-red-400\")} onClick={toggleSubtract}>➖</button>\r\n\r\n                <div>\r\n                    <p className=\"text-2xl\">Maximum number in ➗</p>\r\n                    <input className=\"rounded-lg overflow-hidden appearance-none bg-gray-300 h-3 w-128\" type=\"range\" value={maxDivide} onChange={maxDivideRangeChanged} max=\"200\" min=\"0\"></input>\r\n                    <p className=\"mb-7\">{maxDivide}</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <p className=\"text-2xl\">Maximum answer for ✖️</p>\r\n                    <input className=\"rounded-lg overflow-hidden appearance-none bg-gray-300 h-3 w-128\" type=\"range\" value={maxMultiply} onChange={maxMultiplyRangeChanged} max=\"200\" min=\"0\"></input>\r\n                    <p className=\"mb-7\">{maxMultiply}</p>\r\n                </div>\r\n\r\n                <button className={\"transition duration-300 ease-in-out border-4 text-5xl \" + (multiply ? \"border-green-400\" : \"border-red-400\")} onClick={toggleMultiply} >✖️</button>\r\n                <button className={\"transition duration-300 ease-in-out border-4 text-5xl \" + (divide ? \"border-green-400\" : \"border-red-400\")} onClick={toggleDivide}>➗</button>\r\n\r\n            </div>\r\n                <button className=\"text-7xl border-2 border-black rounded-xl pt-5 pb-5 pl-10 pr-10 mt-56 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\" onClick={()=>{props.setInGame(true); updateSettings()}}>Start</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nexport const Score = (props) => {\r\n\r\n    return (\r\n        <div className=\"pointer-events-none absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 \">\r\n            <h1 style={{fontSize: \"40vw\", opacity: 0.05}}>{props.score}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport FadeIn from 'react-fade-in';\r\nimport { Score } from './Score';\r\nimport { useTimer } from 'react-timer-hook';\r\n\r\n\r\nexport const EndScreen = (props) => {\r\n    return (\r\n        <div className=\"grid grid-rows-auto place-items-center\">\r\n            <div>\r\n            <p className=\"text-9xl\">Game Over!</p>\r\n            </div>\r\n\r\n            <div>\r\n\r\n            <p className=\"text-7xl\">Your score was: {props.score}</p>\r\n            </div>\r\n            <div>\r\n\r\n            <button className=\"text-7xl border-2 border-black rounded-xl pt-5 pb-5 pl-10 pr-10 mt-56 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\" onClick={props.resetGame}>Return to Home</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/correct.e2d01734.mp3\";","import React, { useState, useEffect } from 'react'\r\nimport FadeIn from 'react-fade-in';\r\nimport { Score } from './Score';\r\nimport { useTimer } from 'react-timer-hook';\r\nimport { EndScreen } from './EndScreen';\r\n\r\nimport useSound from 'use-sound';\r\nimport correctSound from \"../correct.mp3\"\r\n\r\n\r\nexport const Game = (props) => {\r\n\r\n    function getTimeout() {\r\n        let to = new Date();\r\n        to.setSeconds(to.getSeconds() + props.settings[\"seconds\"])\r\n        return to;\r\n    }\r\n\r\n    const {\r\n        seconds,\r\n    } = useTimer({ expiryTimestamp: getTimeout(), onExpire: gameEnd });\r\n\r\n    useEffect(() => {\r\n       if(seconds == 0) return;\r\n        document.title = seconds + \" seconds remaining.\"\r\n        if(seconds < 10) setInputColor(\"border-red-400\")\r\n        else if(seconds < 30) setInputColor(\"border-yellow-400\")\r\n        else setInputColor(\"border-green-400\")\r\n    }, [seconds])\r\n\r\n    const [playCorrect] = useSound(correctSound);\r\n\r\n\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [answer, setAnswer] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showEndScreen, setShowEndScreen] = useState(false);\r\n    const [inputColor, setInputColor] = useState(\"border-green-400\")\r\n\r\n    useEffect(() => {\r\n        generateQuestion()\r\n    }, [])\r\n\r\n    function gameEnd() {\r\n        document.title = \"Arith\"\r\n        setShowEndScreen(true);\r\n    }\r\n\r\n    function generateQuestion() {\r\n        let type = Math.floor(Math.random() * 4);\r\n        if (type == 0) { // addition\r\n            if (!props.settings[\"add\"]) \r\n            {\r\n                generateQuestion();\r\n                return;\r\n            }\r\n            else {\r\n                let q1 = Math.floor(Math.random() * (props.settings[\"maxAdd\"] - props.settings[\"minAdd\"])) + props.settings[\"minAdd\"]\r\n                let q2 = Math.floor(Math.random() * (props.settings[\"maxAdd\"] - props.settings[\"minAdd\"])) + props.settings[\"minAdd\"]\r\n                setQuestion(q1 + \" + \" + q2)\r\n                setAnswer(q1 + q2)\r\n            }\r\n        }\r\n        else if (type == 1) { // subtraction\r\n            if (!props.settings[\"subtract\"])\r\n            {\r\n                generateQuestion();\r\n                return;\r\n            }\r\n            else {\r\n                let q1 = Math.floor(Math.random() * (props.settings[\"maxAdd\"] - props.settings[\"minAdd\"])) + props.settings[\"minAdd\"]\r\n                let q2 = Math.floor(Math.random() * (props.settings[\"maxAdd\"] - props.settings[\"minAdd\"])) + props.settings[\"minAdd\"]\r\n                setQuestion(Math.max(q1, q2) + \" - \" + Math.min(q1, q2))\r\n                setAnswer(Math.max(q1, q2) - Math.min(q1, q2))\r\n            }\r\n        }\r\n        else if (type == 2) { // multiplication\r\n            if (!props.settings[\"multiply\"])\r\n            {\r\n                generateQuestion();\r\n                return;\r\n            }\r\n            else {\r\n                let q1 = Math.floor(Math.random() * (props.settings[\"maxSmallDivide\"] - props.settings[\"minSmallDivide\"])) + props.settings[\"minSmallDivide\"]\r\n                let q2 = Math.floor(Math.random() * (props.settings[\"maxMultiply\"] - props.settings[\"minMultiply\"])) + props.settings[\"minMultiply\"]\r\n                while (q1 * q2 > 1000) {\r\n                    // lol don't mind this\r\n                    q1 = Math.floor(Math.random() * (props.settings[\"maxMultiply\"] - props.settings[\"minMultiply\"])) + props.settings[\"minMultiply\"]\r\n                    q2 = Math.floor(Math.random() * (props.settings[\"maxMultiply\"] - props.settings[\"minMultiply\"])) + props.settings[\"minMultiply\"]\r\n                }\r\n                setQuestion(q1 + \" * \" + q2)\r\n                setAnswer(q1 * q2)\r\n            }\r\n\r\n        }\r\n        else if (type == 3) { // division\r\n            if (!props.settings[\"divide\"])\r\n            {\r\n                generateQuestion();\r\n                return;\r\n            }\r\n            else {\r\n                let q1 = Math.floor(Math.random() * (props.settings[\"maxSmallDivide\"] - props.settings[\"minSmallDivide\"])) + props.settings[\"minSmallDivide\"]\r\n                let qm2 = Math.floor(Math.random() * (props.settings[\"maxDivide\"] - props.settings[\"minDivide\"])) + props.settings[\"minDivide\"]\r\n                console.log(qm2)\r\n                while (q1 * qm2 > 1000 || q1 == 0) {\r\n                    q1 = Math.floor(Math.random() * (props.settings[\"maxSmallDivide\"] - props.settings[\"minSmallDivide\"])) + props.settings[\"minSmallDivide\"]\r\n                    qm2 = Math.floor(Math.random() * (props.settings[\"maxDivide\"] - props.settings[\"minDivide\"])) + props.settings[\"minDivide\"]\r\n                }\r\n                setQuestion(qm2 * q1 + \"/\" + q1)\r\n                setAnswer(qm2)\r\n            }\r\n        }\r\n    }\r\n\r\n    function answerChanged(e) {\r\n        console.log(e.target.value)\r\n        if (e.target.value == answer) {\r\n            generateQuestion();\r\n            e.target.value = \"\";\r\n            playCorrect();\r\n            setScore(score + 1);\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        setQuestion(\"\");\r\n        setAnswer(0);\r\n        setScore(0)\r\n        setShowEndScreen(0);\r\n        props.reset();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!showEndScreen &&\r\n                <div className=\"h-64 grid grid-rows-3 grid-flow-col gap-4 place-items-center\">\r\n                    <Score score={score}></Score>\r\n                    <div className=\"text-8xl\">{question}</div>\r\n                    <input type=\"text\" onChange={answerChanged} className={\"w-96 h-14 block mb-2 bg-gray-100 p-2 border-2 shadow-md focus:outline-none hover: \" + inputColor + \" inputColor\"}  />\r\n                </div>\r\n            }\r\n            {showEndScreen && <EndScreen score={score} resetGame={reset}></EndScreen>}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport './App.css';\r\nimport { Settings } from './components/Settings';\r\nimport FadeIn from 'react-fade-in';\r\nimport { Game } from './components/Game';\r\n\r\n\r\nfunction App() {\r\n    const [settings, setSettings] = useState([]);\r\n    const [inGame, setInGame] = useState(false);\r\n\r\n    function resetGame() {\r\n        setInGame(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className={inGame ? 'pointer-events-none fadeOut z-0' : ''}>\r\n                <Settings setInGame={setInGame} setSettings={setSettings}></Settings>\r\n            </div>\r\n\r\n            {inGame &&\r\n                <div className={'absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-0' + (inGame ? \" fadeIn\" : \"\")}>\r\n                    <FadeIn>\r\n                        <Game settings={settings} reset={resetGame}></Game>\r\n                    </FadeIn>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}